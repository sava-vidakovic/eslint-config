module.exports = {
  env: {
    browser: true,
    commonjs: true,
    es6: true,
    node: true,
    jest: true,
  },
  parser: "@typescript-eslint/parser",
  plugins: ["@typescript-eslint", "prettier"],
  extends: ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
  ignorePatterns: ["node_modules/"],
  rules: {
    semi: [2, "always"],
    "no-constant-condition": "error",
    "no-console": "warn",
    "no-debugger": "warn",
    "no-self-compare": "error",
    "dot-notation": "error",
    eqeqeq: "error",
    "max-classes-per-file": ["error", 1],
    "no-alert": "error",
    "no-else-return": "error",
    "no-empty-function": "error",
    "no-multi-spaces": "error",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "no-magic-numbers": "off",
    "@typescript-eslint/no-magic-numbers": [
      "error",
      {
        ignoreEnums: true,
        ignoreReadonlyClassProperties: true,
        ignoreNumericLiteralTypes: true,
      },
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        selector: "variable",
        format: ["camelCase", "PascalCase", "UPPER_CASE"],
      },
      {
        selector: "function",
        format: ["camelCase", "PascalCase"],
      },
      {
        selector: "typeLike",
        format: ["PascalCase"],
      },
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      { argsIgnorePattern: "^_", varsIgnorePattern: "^_" },
    ],
    "prettier/prettier": ["error", {}, { usePrettierrc: true }],
    "array-bracket-spacing": ["error", "never"],
    "block-spacing": "error",
    "eol-last": ["error", "always"],
    "func-call-spacing": ["error", "never"],
    "no-unneeded-ternary": "error",
    "no-whitespace-before-property": "error",
    "constructor-super": "off",
    "no-duplicate-imports": "error",
    "prefer-template": "error",
    "react/prop-types": "off",
  },
};
